name: CI Launch Tests
 
on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
jobs:
  test:
    strategy:
      matrix:
        module: 
          - path: core
            tag: core
          - path: sdk
            tag: sdk
          - path: shared/subsystems 
            tag: shared-subsystems
          - path: shared/aws
            tag: shared-aws
          - path: shared/http
            tag: shared-http
          - path: engines/crypto/aws
            tag: crypto-aws
          - path: engines/crypto/filesystem
            tag: crypto-filesystem
          - path: engines/crypto/pkcs11
            tag: crypto-pkcs11
          - path: engines/crypto/vaultkv2
            tag: crypto-vaultkv2
          - path: engines/eventbus/amqp
            tag: eventbus-amqp
          - path: engines/eventbus/aws
            tag: eventbus-aws
          - path: engines/eventbus/channel
            tag: eventbus-channel
          - path: engines/storage/couchdb
            tag: storage-couchdb
          - path: engines/storage/postgres
            tag: storage-postgres
          - path: engines/storage/sqlite
            tag: storage-sqlite
          - path: backend
            tag: backend
          - path: connectors/awsiot
            tag: connector-awsiot
          - path: monolithic
            tag: monolithic
          
    name: ${{ matrix.module.path }} - Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
 
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '^1.22.0' # The Go version to download (if necessary) and use.
          cache-dependency-path: "**/*.sum"
 
      - name: Install Dependencies
        working-directory: ${{ matrix.module.path }}
        run: go mod download

      - name: Run Golang Tests with coverage
        id: run
        working-directory: ${{ matrix.module.path }}
        run: |
          go run gotest.tools/gotestsum@latest --format github-actions ./... -coverpkg=./... -timeout 900s -coverprofile coverage.txt -covermode=atomic

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.2.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          commit_parent: ${{ github.event.pull_request.base.sha }}
          fail_ci_if_error: true
          verbose: true
          flags: ${{ matrix.module.tag }}
