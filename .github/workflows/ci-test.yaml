name: GO Unit Testing
 
on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
jobs:
  test:
    strategy:
      max-parallel: 5
      matrix:
        module: 
          - path: core
            tag: core
          - path: sdk
            tag: sdk
          - path: shared/subsystems 
            tag: shared-subsystems
          - path: shared/aws
            tag: shared-aws
          - path: shared/http
            tag: shared-http
          - path: engines/crypto/aws
            tag: crypto-aws
          - path: engines/crypto/filesystem
            tag: crypto-filesystem
          - path: engines/crypto/vaultkv2
            tag: crypto-vaultkv2
          - path: engines/eventbus/amqp
            tag: eventbus-amqp
          - path: engines/eventbus/aws
            tag: eventbus-aws
          - path: engines/storage/postgres
            tag: storage-postgres
          - path: backend
            tag: backend
          - path: connectors/awsiot
            tag: connector-awsiot
          - path: monolithic
            tag: monolithic
          
    name: ${{ matrix.module.path }} - Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
 
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '^1.24.3' # The Go version to download (if necessary) and use.
          cache-dependency-path: "**/*.sum"
 
      - name: Install Dependencies
        working-directory: ${{ matrix.module.path }}
        run: go mod download

      - name: Run Golang Tests with coverage
        id: run
        working-directory: ${{ matrix.module.path }}
        run: |
          go run gotest.tools/gotestsum@latest --format github-actions ./... -coverpkg=./... -timeout 900s -coverprofile coverage.txt -covermode=atomic

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5.1.2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          commit_parent: ${{ github.event.pull_request.base.sha }}
          fail_ci_if_error: true
          verbose: true
          flags: ${{ matrix.module.tag }}
  test-pkcs11:
    name: engines/crypto/pkcs11 - Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
 
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '^1.24.3' # The Go version to download (if necessary) and use.
          cache-dependency-path: "**/*.sum"
      
      - name: Install PKCS11 Proxy Dependencies
        run: |
          sudo apt-get install -y libseccomp-dev #Required for building pkcs11-proxy
          git clone https://github.com/SUNET/pkcs11-proxy
          cd pkcs11-proxy
          cmake -DCMAKE_POLICY_VERSION_MINIMUM=3.5 . 
          make
          sudo make install 
          sudo cp pkcs11-daemon /usr/local/bin/
          ls /usr/local/lib/libpkcs11-proxy.so
 
      - name: Install Dependencies
        working-directory: engines/crypto/pkcs11
        run: go mod download

      - name: Run Golang Tests with coverage
        id: run
        working-directory: engines/crypto/pkcs11
        env:
          PKCS11_MODULE_PATH: /usr/local/lib/libpkcs11-proxy.so
        run: |
          go run gotest.tools/gotestsum@latest --format github-actions ./... -coverpkg=./... -timeout 900s -coverprofile coverage.txt -covermode=atomic

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.2.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          commit_parent: ${{ github.event.pull_request.base.sha }}
          fail_ci_if_error: true
          verbose: true
          flags: crypto-pkcs11
