name: CI Launch Tests

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
  workflow_call:
    # Map the workflow outputs to job outputs
    outputs:
      coverage:
        description: "Coverage report"
        value: ${{ jobs.test.outputs.coverage }}  


jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    outputs:
      coverage: ${{ steps.run.outputs.coverage }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '^1.20.0' # The Go version to download (if necessary) and use.

      - name: Install Dependencies
        run: go mod download

      - name: Run Golang Tests with coverage
        id: run
        run: |
          go run gotest.tools/gotestsum@latest --format github-actions ./pkg/... -coverpkg=./... -timeout 600s -coverprofile coverage.txt
          float_coverage=$(go tool cover -func coverage.txt | grep total | awk '{print substr($3, 1, length($3)-1)}')
          echo "coverage=$float_coverage" >> $GITHUB_OUTPUT
    
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.2.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          commit_parent: ${{ github.event.pull_request.base.sha }}
          fail_ci_if_error: true
          verbose: true
