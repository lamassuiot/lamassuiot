// OpenTelemetry Collector Receiver Configuration
otelcol.receiver.otlp "default" {
  http {}
  grpc {}

  output {
    metrics = [otelcol.processor.batch.default.input]
    logs    = [otelcol.processor.batch.default.input]
    traces  = [otelcol.processor.batch.default.input]
  }
}

// OpenTelemetry Collector Processor
otelcol.processor.batch "default" {
  output {
    metrics = [otelcol.exporter.prometheus.default.input]
    traces  = [otelcol.exporter.otlphttp.default.input]
    logs    = [otelcol.exporter.loki.default.input]
  }
}

// OpenTelemetry Collector Exporter
otelcol.exporter.loki "default" {
  forward_to = [loki.write.getting_started.receiver]
}

otelcol.exporter.otlphttp "default" {
  client {
    endpoint = "http://tempo:4318"
    tls {
        insecure             = true
    }
  }
}

otelcol.exporter.prometheus "default" {
  forward_to = [prometheus.remote_write.default.receiver]
}

prometheus.remote_write "default" {
  endpoint {
    url = "http://prometheus:9090/api/v1/write"
  }
}

// Docker Discovery: Identifies running containers
discovery.docker "getting_started" {
  host              = "unix:///var/run/docker.sock"
  refresh_interval  = "5s"
}

// Relabeling discovered Docker containers
discovery.relabel "getting_started" {
  targets = []

  rule {
    source_labels = ["__meta_docker_container_name"]
    regex         = "/(.*)"
    target_label  = "container"
  }
}

// Loki Source: Collect logs from Docker containers
loki.source.docker "getting_started" {
  host             = "unix:///var/run/docker.sock"
  targets          = discovery.docker.getting_started.targets
  forward_to       = [loki.process.getting_started.receiver]
  relabel_rules    = discovery.relabel.getting_started.rules
  refresh_interval = "5s"
}

// Loki Processor: Apply static labels to logs
loki.process "getting_started" {
  stage.static_labels {
    values = {
      env = "production",
    }
  }
  forward_to = [loki.write.getting_started.receiver]
}

// Loki Write: Send logs to the Loki endpoint
loki.write "getting_started" {
  endpoint {
    url = "http://loki:3100/loki/api/v1/push"
  }
}


// Live Debugging: Enables real-time log viewing in Alloy UI
livedebugging {
  enabled = true
}
